# frozen_string_literal: true

require "base64"

RSpec.describe "Bugs" do
  it "issue #45" do
    diffs = [[1, 3, 197, 134, 244, 186, 10, 0, 7, 1, 7, 100, 101, 102, 97, 117, 108, 116, 3, 9, 112, 97, 114, 97, 103, 114, 97, 112, 104, 7, 0, 197, 134, 244, 186, 10, 0, 6, 4, 0, 197, 134, 244, 186, 10, 1, 1, 115, 0],
             [1, 1, 197, 134, 244, 186, 10, 3, 132, 197, 134, 244, 186, 10, 2,
              3, 227, 129, 149, 1, 197, 134, 244, 186, 10, 1, 2, 1],
             [1, 4, 197, 134, 244, 186, 10, 0, 7, 1, 7, 100, 101, 102, 97, 117,
              108, 116, 3, 9, 112, 97, 114, 97, 103, 114, 97, 112, 104, 7, 0, 197, 134, 244, 186, 10, 0, 6, 1, 0, 197, 134, 244, 186, 10, 1, 1, 132, 197, 134, 244, 186, 10, 2, 3, 227, 129, 149, 1, 197, 134, 244, 186, 10, 1, 2, 1],
             [1, 1, 197, 134, 244, 186, 10, 4, 132, 197, 134, 244, 186, 10, 3,
              1, 120, 0],
             [1, 1, 197, 134, 244, 186, 10, 5, 132, 197, 134, 244, 186, 10, 4,
              3, 227, 129, 129, 1, 197, 134, 244, 186, 10, 1, 4, 1],
             [1, 1, 197, 134, 244, 186, 10, 6, 132, 197, 134, 244, 186, 10, 5,
              1, 107, 0],
             [1, 2, 197, 134, 244, 186, 10, 4, 129, 197, 134, 244, 186, 10, 3,
              1, 132, 197, 134, 244, 186, 10, 4, 3, 227, 129, 129, 1, 197, 134, 244, 186, 10, 1, 4, 1],
             [1, 1, 197, 134, 244, 186, 10, 7, 132, 197, 134, 244, 186, 10, 6,
              3, 227, 129, 147, 1, 197, 134, 244, 186, 10, 1, 6, 1],
             [1, 2, 197, 134, 244, 186, 10, 6, 129, 197, 134, 244, 186, 10, 5,
              1, 132, 197, 134, 244, 186, 10, 6, 3, 227, 129, 147, 1, 197, 134, 244, 186, 10, 1, 6, 1],
             [1, 1, 197, 134, 244, 186, 10, 8, 132, 197, 134, 244, 186, 10, 7,
              1, 114, 0],
             [1, 1, 197, 134, 244, 186, 10, 9, 132, 197, 134, 244, 186, 10, 8,
              3, 227, 130, 140, 1, 197, 134, 244, 186, 10, 1, 8, 1],
             [1, 1, 197, 134, 244, 186, 10, 8, 132, 197, 134, 244, 186, 10, 7,
              1, 114, 0],
             [1, 1, 197, 134, 244, 186, 10, 10, 132, 197, 134, 244, 186, 10, 9,
              1, 107, 0],
             [1, 1, 197, 134, 244, 186, 10, 11, 132, 197, 134, 244, 186, 10,
              10, 3, 227, 129, 139, 1, 197, 134, 244, 186, 10, 1, 10, 1],
             [1, 1, 197, 134, 244, 186, 10, 12, 132, 197, 134, 244, 186, 10,
              11, 1, 114, 0],
             [1, 1, 197, 134, 244, 186, 10, 13, 132, 197, 134, 244, 186, 10,
              12, 3, 227, 130, 137, 1, 197, 134, 244, 186, 10, 1, 12, 1],
             [1, 1, 197, 134, 244, 186, 10, 9, 132, 197, 134, 244, 186, 10, 8,
              3, 227, 130, 140, 1, 197, 134, 244, 186, 10, 1, 8, 1],
             [1, 1, 197, 134, 244, 186, 10, 10, 132, 197, 134, 244, 186, 10, 9,
              1, 107, 0],
             [1, 1, 197, 134, 244, 186, 10, 11, 132, 197, 134, 244, 186, 10,
              10, 3, 227, 129, 139, 1, 197, 134, 244, 186, 10, 1, 10, 1],
             [1, 1, 197, 134, 244, 186, 10, 12, 132, 197, 134, 244, 186, 10,
              11, 1, 114, 0],
             [1, 1, 197, 134, 244, 186, 10, 14, 132, 197, 134, 244, 186, 10,
              13, 1, 98, 0],
             [1, 1, 197, 134, 244, 186, 10, 16, 132, 197, 134, 244, 186, 10,
              15, 1, 103, 0],
             [1, 1, 197, 134, 244, 186, 10, 15, 132, 197, 134, 244, 186, 10,
              14, 3, 227, 129, 176, 1, 197, 134, 244, 186, 10, 1, 14, 1],
             [1, 1, 197, 134, 244, 186, 10, 17, 132, 197, 134, 244, 186, 10,
              16, 3, 227, 129, 144, 1, 197, 134, 244, 186, 10, 1, 16, 1],
             [1, 1, 197, 134, 244, 186, 10, 17, 132, 197, 134, 244, 186, 10,
              16, 3, 227, 129, 144, 1, 197, 134, 244, 186, 10, 1, 16, 1],
             [1, 1, 197, 134, 244, 186, 10, 18, 132, 197, 134, 244, 186, 10,
              17, 6, 227, 131, 144, 227, 130, 176, 1, 197, 134, 244, 186, 10, 2, 15, 1, 17, 1],
             [1, 1, 197, 134, 244, 186, 10, 20, 132, 197, 134, 244, 186, 10,
              19, 1, 103, 0],
             [1, 3, 197, 134, 244, 186, 10, 13, 132, 197, 134, 244, 186, 10,
              12, 3, 227, 130, 137, 129, 197, 134, 244, 186, 10, 13, 1, 132, 197, 134, 244, 186, 10, 14, 4, 227, 129, 176, 103, 1, 197, 134, 244, 186, 10, 2, 12, 1, 14, 1],
             [1, 1, 197, 134, 244, 186, 10, 21, 132, 197, 134, 244, 186, 10,
              20, 3, 227, 129, 140, 1, 197, 134, 244, 186, 10, 1, 20, 1],
             [1, 1, 197, 134, 244, 186, 10, 23, 132, 197, 134, 244, 186, 10,
              22, 3, 227, 129, 170, 1, 197, 134, 244, 186, 10, 1, 22, 1],
             [1, 3, 197, 134, 244, 186, 10, 18, 132, 197, 134, 244, 186, 10,
              17, 6, 227, 131, 144, 227, 130, 176, 129, 197, 134, 244, 186, 10, 19, 1, 132, 197, 134, 244, 186, 10, 20, 3, 227, 129, 140, 1, 197, 134, 244, 186, 10, 3, 15, 1, 17, 1, 20, 1],
             [1, 1, 197, 134, 244, 186, 10, 24, 132, 197, 134, 244, 186, 10,
              23, 3, 227, 129, 132, 0],
             [1, 1, 197, 134, 244, 186, 10, 22, 132, 197, 134, 244, 186, 10,
              21, 1, 110, 0],
             [1, 1, 197, 134, 244, 186, 10, 26, 132, 197, 134, 244, 186, 10,
              25, 3, 227, 129, 139, 1, 197, 134, 244, 186, 10, 1, 25, 1],
             [1, 1, 197, 134, 244, 186, 10, 25, 132, 197, 134, 244, 186, 10,
              24, 1, 107, 0],
             [1, 4, 197, 134, 244, 186, 10, 22, 129, 197, 134, 244, 186, 10,
              21, 1, 132, 197, 134, 244, 186, 10, 22, 6, 227, 129, 170, 227, 129, 132, 129, 197, 134, 244, 186, 10, 24, 1, 132, 197, 134, 244, 186, 10, 25, 3, 227, 129, 139, 1, 197, 134, 244, 186, 10, 2, 22, 1, 25, 1],
             [1, 1, 197, 134, 244, 186, 10, 27, 132, 197, 134, 244, 186, 10,
              26, 1, 100, 0],
             [1, 1, 197, 134, 244, 186, 10, 28, 132, 197, 134, 244, 186, 10,
              27, 3, 227, 129, 169, 1, 197, 134, 244, 186, 10, 1, 27, 1],
             [1, 2, 197, 134, 244, 186, 10, 27, 129, 197, 134, 244, 186, 10,
              26, 1, 132, 197, 134, 244, 186, 10, 27, 3, 227, 129, 169, 1, 197, 134, 244, 186, 10, 1, 27, 1],
             [1, 1, 197, 134, 244, 186, 10, 29, 132, 197, 134, 244, 186, 10,
              28, 3, 227, 129, 134, 0],
             [1, 1, 197, 134, 244, 186, 10, 30, 132, 197, 134, 244, 186, 10,
              29, 1, 107, 0],
             [1, 1, 197, 134, 244, 186, 10, 29, 132, 197, 134, 244, 186, 10,
              28, 3, 227, 129, 134, 0],
             [1, 1, 197, 134, 244, 186, 10, 31, 132, 197, 134, 244, 186, 10,
              30, 3, 227, 129, 139, 1, 197, 134, 244, 186, 10, 1, 30, 1],
             [1, 1, 197, 134, 244, 186, 10, 30, 132, 197, 134, 244, 186, 10,
              29, 1, 107, 0],
             [1, 1, 197, 134, 244, 186, 10, 31, 132, 197, 134, 244, 186, 10,
              30, 3, 227, 129, 139, 1, 197, 134, 244, 186, 10, 1, 30, 1],
             [1, 1, 197, 134, 244, 186, 10, 32, 135, 197, 134, 244, 186, 10, 0,
              3, 9, 112, 97, 114, 97, 103, 114, 97, 112, 104, 0],
             [1, 1, 197, 134, 244, 186, 10, 32, 135, 197, 134, 244, 186, 10, 0,
              3, 9, 112, 97, 114, 97, 103, 114, 97, 112, 104, 0],
             [1, 2, 197, 134, 244, 186, 10, 33, 7, 0, 197, 134, 244, 186, 10,
              32, 6, 4, 0, 197, 134, 244, 186, 10, 33, 1, 107, 0],
             [1, 1, 197, 134, 244, 186, 10, 35, 132, 197, 134, 244, 186, 10,
              34, 3, 227, 129, 139, 1, 197, 134, 244, 186, 10, 1, 34, 1],
             [1, 1, 197, 134, 244, 186, 10, 36, 132, 197, 134, 244, 186, 10,
              35, 1, 107, 0]]

    doc = Y::Doc.new
    diffs.each do |diff|
      doc.sync(diff)
    end
  end

  it "issue #131" do
    file = File.join(__dir__, "/../files/issue131_ydoc.base64.txt")
    message = File.read(file)
    update = Base64.decode64(message).unpack("C*")

    doc = Y::Doc.new
    doc.sync(update)

    ymap = doc.get_map("data")

    expect(ymap["agents"]).to eq([])
    expect(ymap["fields"]).to eq(
      {
        "test_text" => {
          "order" => 1.0,
          "type" => "text",
          "label" => "Test Text"
        },
        "test_date" => {
          "order" => 1.0,
          "type" => "date",
          "label" => "Test Date"
        },
        "test_person" => {
          "order" => 2.0,
          "type" => "person",
          "label" => "Test Person"
        }
      }
    )
    expect(ymap["testArray"]).to eq([1.0, "two", true])
    expect(ymap["testBool"]).to be(false)
    expect(ymap["testFloat"]).to eq(3.1415)
    expect(ymap["testInt"]).to eq(1.0)
    expect(ymap["title"]).to eq("New Document 3")
    expect(ymap["testHash"]).to eq(
      {
        "c" => false,
        "a" => 1.0,
        "b" => "2"
      }
    )
  end
end
